<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog - projects</title><link href="https://tinmard.github.io/" rel="alternate"></link><link href="https://tinmard.github.io/feeds/projects.atom.xml" rel="self"></link><id>https://tinmard.github.io/</id><updated>2018-11-08T13:42:00+00:00</updated><entry><title>Stimic - Stimulation Listing</title><link href="https://tinmard.github.io/stimic-stimulation-listing.html" rel="alternate"></link><published>2018-11-08T13:42:00+00:00</published><updated>2018-11-08T13:42:00+00:00</updated><author><name></name></author><id>tag:tinmard.github.io,2018-11-08:/stimic-stimulation-listing.html</id><summary type="html">&lt;p&gt;This article describes the procedure used for listing all the stimulations events through a semi-automated pipeline.&lt;/p&gt;
&lt;h2&gt;Artifact Detection in macro-electrodes&lt;/h2&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt; :  Detect (semi)-automatically stimulation artifacts on the macro-signals. Detection output must give the onset time of the stim, the channel(s) of stimulations and the frequency of the â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;This article describes the procedure used for listing all the stimulations events through a semi-automated pipeline.&lt;/p&gt;
&lt;h2&gt;Artifact Detection in macro-electrodes&lt;/h2&gt;
&lt;h3&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt; :  Detect (semi)-automatically stimulation artifacts on the macro-signals. Detection output must give the onset time of the stim, the channel(s) of stimulations and the frequency of the stim. A visual confirmation will be necessary before using the results. Here we only concentrate on locating the stimulation on the stimulation channels, with monopolar montage.&lt;/p&gt;
&lt;p&gt;This will help to create a spreadsheet for each patient containing all the stimulation events and  parameters :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Patient ID&lt;/li&gt;
&lt;li&gt;Stimulation File Name&lt;/li&gt;
&lt;li&gt;Channel / Electrode&lt;/li&gt;
&lt;li&gt;Onset Time (s)&lt;/li&gt;
&lt;li&gt;Duration (s)&lt;/li&gt;
&lt;li&gt;Frequency (Hz)&lt;/li&gt;
&lt;li&gt;Intensity (mA?)&lt;/li&gt;
&lt;li&gt;Effect on the patient (if any)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Stimulation Parameters&lt;/h3&gt;
&lt;p&gt;Both frequency and intensity of the stimulation can change and affect the artifacts waveforms. The duration of the stimulation can also change but as we are only interested in detection the onset time, we will not consider it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Frequency range between 1Hz and 50Hz&lt;/li&gt;
&lt;li&gt;Intensity range between ? mA and ?? mA&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Pipeline&lt;/h2&gt;
&lt;p&gt;For each patient, for each file : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0 - Run the python script &lt;em&gt;stim_clean_EDF_files&lt;/em&gt; which open all the EDF files, remove the non-EEG channels and bad channels. The script also check that each file contains the same number of channels and are ordered in the same way across each file. If a channel is missing, an NaN channel id added. It creates new FIF files&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 - For each file created in step 0, run the python script &lt;em&gt;stim_detection_main.py&lt;/em&gt; which automatically detects the period of stimulation. It create an output csv file containing the events detected by the algorithm. Make sure that the frequencies of stimulations apart from 1 and 50 Hz are in the list called &lt;em&gt;mid_freqs_hz&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Columns of interest are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 : Type of the stimulation&lt;/li&gt;
&lt;li&gt;5 : Time (in seconds)&lt;/li&gt;
&lt;li&gt;8 : Duration (in seconds)&lt;/li&gt;
&lt;li&gt;7 : Channel index&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2 - Visual check of the events : run &lt;em&gt;micMac&lt;/em&gt; in Matlab and open the FIF file (&lt;em&gt;Signals / Load Raw Signal / FIF Files&lt;/em&gt;).
 Import the csv file created in 1. Go in Events/Import/External Events. Indicate the correct columns number (You can use the &lt;strong&gt;Auto-detect button&lt;/strong&gt;. &lt;strong&gt;Check the "zero-index for channel" checkbox&lt;/strong&gt; . Check that the stimulation events are correct and manually add the missing ones. Once done, make sure to &lt;strong&gt;sort the event by time&lt;/strong&gt; and &lt;strong&gt;export the events&lt;/strong&gt;. It create another csv file, with this time all the stimulation events.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3 - Import the csv file just created in &lt;strong&gt;2&lt;/strong&gt; into Excel and reorganize the columns as :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;ID&lt;/strong&gt; : patient ID&lt;/li&gt;
&lt;li&gt;file : name of the EEG (.edf) file&lt;/li&gt;
&lt;li&gt;type : Type of the stimulation (e.g. Stim 1 Hz)&lt;/li&gt;
&lt;li&gt;time : Time of the stimulation onset (s)&lt;/li&gt;
&lt;li&gt;channelind : Channel index  ! first index = 1 ! &lt;/li&gt;
&lt;li&gt;channelname : Channel name&lt;/li&gt;
&lt;li&gt;freq : Frequency (Hz)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;intensity&lt;/strong&gt; : Intensity (mA)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;duration&lt;/strong&gt;: Duration (s)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;effect&lt;/strong&gt; : Comment on the possible effet of the stimulation, if none will be "RAS"&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The columns in &lt;strong&gt;bold&lt;/strong&gt; are the ones you will need to fill with the Cahier, where all the stimulations are written by hand. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;4 - Run the python script &lt;em&gt;stim_spreadsheet_utils.py&lt;/em&gt;. It will add an 11th field to the excel sheet created in &lt;strong&gt;3&lt;/strong&gt;, the bipolar channel name and will decrement the channel index, to be zero-indexed. This is useful to know the 2 contacts of stimulation. Once done, check the column is correct.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;5 - Concatenate all the excel sheet into one, to get all the stimulations data into 1 file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;6 - Create the epoch structure using the &lt;em&gt;stim_create_epoch.py&lt;/em&gt; file. It creates a MNE epoch structure.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Output spreadsheet&lt;/h2&gt;
&lt;p&gt;The output spreadsheet will looks like this.This will allow to run further analysis.&lt;/p&gt;
&lt;p&gt;{% img /_images/stimic/stim_list/output_spreadsheet_example.png  %}&lt;/p&gt;
&lt;h2&gt;Detection Algorithm&lt;/h2&gt;
&lt;h3&gt;1 Hz Stimulation&lt;/h3&gt;
&lt;p&gt;{% img /_images/stimic/stim_list/1Hz_artefact_macro.png  %}&lt;/p&gt;
&lt;p&gt;For 1Hz stimulation we count the number of peaks if the threshold signal in the window [-0.1s, 10.1s] around each time of threshold crossing. If the number of peaks if equal to 10 more or less, the event is considered a 1Hz stimulation.&lt;/p&gt;
&lt;p&gt;For each channel : &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Threshold signal (3150 uV and -3150 uV)  &lt;/li&gt;
&lt;li&gt;Delete event if the previous one occured closely (less than 4s ago)&lt;/li&gt;
&lt;li&gt;Count the number of peaks in the time interval [-0.1s, 10.1s] on the thresholded signal, 0 being the time of threshold crossing&lt;/li&gt;
&lt;li&gt;Delete peak if the previous one occured less than 0.7s ago&lt;/li&gt;
&lt;li&gt;If the number of peaks is in the interval [8, 12], count the event as a 1Hz stimulation&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;1Hz &amp;lt; f &amp;lt; 50Hz Stimulation&lt;/h3&gt;
&lt;p&gt;For stimulation frequencies between 1Hz and 50Hz, the first steps are the same as for the 1Hz stimulation and we compute the Power Spectral Density of the [-0.1, 10.1s] interval around the threshold crossing time.&lt;/p&gt;
&lt;p&gt;For each channel &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Threshold signal (3150 uV and -3150 uV)  &lt;/li&gt;
&lt;li&gt;Delete event if the previous one occured closely (less than 4s ago)&lt;/li&gt;
&lt;li&gt;Compute the Power Spectral Density on the interval [-0.1, 10.1s] using Welch method (hanning window of 1/5 of the length of the window ~= 2s - overlap : 50% overlap between windows, nfft : 16384).  Select the frequencies between 0.3 and 100 Hz.&lt;/li&gt;
&lt;li&gt;Compute the PSD baseline : Divide the signal in k segments of N samples, then take the minimum value from each segment (6Hz windows). Low-pass the resulting signal (wn = 0.01, filt_order=5)&lt;/li&gt;
&lt;li&gt;Remove the PSD baseline to get a corrected PSD&lt;/li&gt;
&lt;li&gt;For each frequency of stimulation (must be specified at the beginning), if the corrected PSD at the stimulation frequency is superior at 15 dB, count this event as a stimulation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note : 1Hz stimulations could be detected with this algorithm but the method described above seemed more robust.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;50Hz Stimulation&lt;/h3&gt;
&lt;p&gt;The stimulation artifact for 50Hz stimulation is not a 50Hz signal, we observe on the stimulation channel a saturation period followed by a slow wave (see figure). &lt;/p&gt;
&lt;p&gt;{% img /_images/stimic/stim_list/50_artefact_macro.png  %}&lt;/p&gt;
&lt;p&gt;For detecting this artifact, we first compute an average artifact smoothed waveform : &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We manually set the onset of 50Hz stimulation period for 13 stimulations (giving 26 waveforms on monopolar data).&lt;/li&gt;
&lt;li&gt;Smooth each waveform with a 6th order butterworth low pass filter, cutoff frequency of 1Hz (forward, backward filtering)&lt;/li&gt;
&lt;li&gt;If the first point of each smoothed waveform is negative, inverse the waveform.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;{% img /_images/stimic/stim_list/50Hz_artefact_mean.png  %}&lt;/p&gt;
&lt;p&gt;We can notive that the time of zero-crossing in the smoothed waveforms occured in a small time window [1.3, 1.8s]&lt;/p&gt;
&lt;p&gt;Moreover waveforms are highly correlated between each other : &lt;/p&gt;
&lt;p&gt;{% img /_images/stimic/stim_list/50Hz_Spearman_corr.png  %}&lt;/p&gt;
&lt;p&gt;Once we have this mean 50Hz artifact pattern, we can use it to compare the waveform at each threshold crossing time with this pattern using Spearman correlation. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Threshold signal (3150 uV and -3150 uV)  &lt;/li&gt;
&lt;li&gt;Delete event if the previous one occured closely (less than 4s ago)&lt;/li&gt;
&lt;li&gt;Remove the first 0.1s of the waveform to remove the first peak : select the interval [+0.1, 5s]&lt;/li&gt;
&lt;li&gt;Low pass the filter (6th order, low pass Butterworth filter, 1Hz cutoff frequency). &lt;/li&gt;
&lt;li&gt;Compare the smoothed waveform with the mean artifact pattern using a Spearman correlation. If sampling frequencies of the waveform and the mean pattern, interpolate the waveform to get the same number of points as the mean pattern.&lt;/li&gt;
&lt;li&gt;Compute the zero-crossing time : the time at which the waveform crosses 0. If there are multiples crossing time, select the first one.&lt;/li&gt;
&lt;li&gt;If the Spearman correlation is above 0.80 and the zero-crossing time is the interval [1.3, 1.8s], consider the event as a 50 Hz stimulation.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note : If the signal is very noisy the detection algorithm may detect a huge number of events, in this case it may take more time to clean the detected stimulation rather than detecting manually all the stimulations&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Cleaning stimulation events&lt;/p&gt;
&lt;p&gt;Stimulation events are then sorted by increasing time and events on the same channel with the same frequency and close in time (difference inferior to 5s) are merged. &lt;/p&gt;</content><category term="Stimic"></category></entry><entry><title>Hardware tools for reducing noise in micro-recordings</title><link href="https://tinmard.github.io/epifar/" rel="alternate"></link><published>2018-10-22T17:33:00+00:00</published><updated>2018-10-22T17:33:00+00:00</updated><author><name></name></author><id>tag:tinmard.github.io,2018-10-22:/epifar/</id><summary type="html">&lt;p&gt;A complete list of all hardware used for reducing noise in micro-electrode recordings is
 avalaible &lt;a href="https://tinmard.github.io/_data/epifar/noise/hardware/hardware_list.xlsx"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Spectrum Analyzer SPECTRAN-NF 1010E&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The Spectran NF-1010E from Aaronia is a spectrum analyzer. It can measures 
 both electric and magnetic fields in a frequency range of 10Hz to 10kHz. It is very useful for â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;A complete list of all hardware used for reducing noise in micro-electrode recordings is
 avalaible &lt;a href="https://tinmard.github.io/_data/epifar/noise/hardware/hardware_list.xlsx"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Spectrum Analyzer SPECTRAN-NF 1010E&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The Spectran NF-1010E from Aaronia is a spectrum analyzer. It can measures 
 both electric and magnetic fields in a frequency range of 10Hz to 10kHz. It is very useful for localizing the
  source of noise in a complex environment. The Spectran NF-1010E comes with a Software which allows further analyses. &lt;/p&gt;
&lt;p&gt;{% img /_images/epifar/noise/spectran_nf_1010e.jpg 500 %}&lt;/p&gt;
&lt;p&gt;Spectran NF Manual : &lt;a href="https://tinmard.github.io/_data/epifar/noise/hardware/SPECTRAN-NF/SPECTRAN-NF_FR.pdf"&gt;fr&lt;/a&gt;
  - &lt;a href="https://tinmard.github.io/_data/epifar/noise/hardware/SPECTRAN-NF/SPECTRAN-NF_EN.pdf"&gt;en&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Soft Manual : &lt;a href="https://tinmard.github.io/_data/epifar/noise/hardware/SPECTRAN-NF/mcs-manual-en-20150811.pdf"&gt;MCS&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Power-Plant/Multiprise BADA LB-6600&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The BADA LB-6600 is a power plant (multiprise) with 8 sockets. It also filters the incoming current from the mains (secteur).&lt;/p&gt;
&lt;p&gt;{% img /_images/epifar/noise/bada-lb-6610.jpg 400 %}&lt;/p&gt;
&lt;p&gt;Bada manual : &lt;a href="https://tinmard.github.io/_data/epifar/noise/hardware/Bada_LB_6600_FiltreSecteur.pdf"&gt;bada_lb_6600&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;{% img /_images/warning.png 20 %} The total number of devices plugged in the BADA power-plant should note require more power than
the BADA can deliver : 3300W &lt;/p&gt;
&lt;p&gt;{% img /_images/warning.png 20 %} The BADA power plant must be powered in with a cable able to conduct a sufficient power.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Shielded power cables&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The mains (secteur) are the main source of 50Hz noise in the micro-recordings. One simple but effective step to 
  greatly reduce this noise is to use shielded power cables. Each electronic device should be powered with a shielded cable.&lt;/p&gt;
&lt;p&gt;{% img /_images/epifar/noise/cable-secteur-blinde-olflex-110cy-3x25mm-220m.jpg 200 %}&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Shielding fabric&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;{% img /_images/epifar/noise/aaronia_shield.png 600 %}&lt;/p&gt;
&lt;p&gt;Manuals: 
   1. &lt;a href="https://tinmard.github.io/_data/epifar/noise/hardware/Shielding_fabric/Aaronia-Mesh_FR.pdf"&gt;Aaronia-Mesh&lt;/a&gt;
   2. &lt;a href="https://tinmard.github.io/_data/epifar/noise/hardware/Shielding_fabric/Aaronia-Shield_Tissu_de_blindage_de_50dB.pdf"&gt;Aaronia-Shield&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Fluke 87V Multimeter&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;{% img /_images/epifar/noise/Fluke87V.jpg 400 %}&lt;/p&gt;
&lt;p&gt;&lt;a href="{filename}/_data/epifar/noise/hardware/Fluke_87V_Spec.pdf"&gt;Spec&lt;/a&gt; - &lt;a href="{filename}/_data/epifar/noise/hardware/Fluke_87V_UserManual.pdf"&gt;UserManual&lt;/a&gt;&lt;/p&gt;</content><category term="Epifar"></category><category term="Hardware"></category><category term="Noise"></category></entry><entry><title>Cochlea</title><link href="https://tinmard.github.io/cochlea" rel="alternate"></link><published>2010-10-04T13:39:00+00:00</published><updated>2010-10-04T13:39:00+00:00</updated><author><name></name></author><id>tag:tinmard.github.io,2010-10-04:/cochlea</id><summary type="html">&lt;p&gt;The simplecochlea package is a basic cochlea model, designed during the M4 project, 
for the conversion of sound into spikes. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/_images/cochlea/cochlea_schema.png"&gt;&lt;/p&gt;
&lt;p&gt;MOKO &lt;/p&gt;
&lt;p&gt;{% img /_images/cochlea/cochlea_schema.png 600 %}&lt;/p&gt;
&lt;p&gt;MOKOKOKOKOKOKO&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pelican" src="https://tinmard.github.io/_images/cochlea/cochlea_schema.png"&gt;&lt;/p&gt;
&lt;p&gt;AAAAAAAAAAAAAAA&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pelican" src="{filename}/images/cochlea_schema.png"&gt;&lt;/p&gt;
&lt;p&gt;mok&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The code is availaible &lt;a href="https://github.com/tinmarD/simplecochlea"&gt;here&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;The doc is here&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;p&gt;The simplecochlea package is a basic cochlea model, designed during the M4 project, 
for the conversion of sound into spikes. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/_images/cochlea/cochlea_schema.png"&gt;&lt;/p&gt;
&lt;p&gt;MOKO &lt;/p&gt;
&lt;p&gt;{% img /_images/cochlea/cochlea_schema.png 600 %}&lt;/p&gt;
&lt;p&gt;MOKOKOKOKOKOKO&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pelican" src="https://tinmard.github.io/_images/cochlea/cochlea_schema.png"&gt;&lt;/p&gt;
&lt;p&gt;AAAAAAAAAAAAAAA&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pelican" src="{filename}/images/cochlea_schema.png"&gt;&lt;/p&gt;
&lt;p&gt;mok&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The code is availaible &lt;a href="https://github.com/tinmarD/simplecochlea"&gt;here&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;The doc is here&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Epifar</title><link href="https://tinmard.github.io/epifar/" rel="alternate"></link><published>2010-10-04T13:39:00+00:00</published><updated>2010-10-04T13:39:00+00:00</updated><author><name></name></author><id>tag:tinmard.github.io,2010-10-04:/epifar/</id><summary type="html">&lt;h2&gt;Hybrid electrode&lt;/h2&gt;
&lt;p&gt;New micro-macro electrode : &lt;/p&gt;
&lt;p&gt;{% img /_images/epifar/micro_macro.png 600 %}&lt;/p&gt;
&lt;p&gt;The image was generated with &lt;a href="http://www.openscad.org/"&gt;OpenScad&lt;/a&gt;, from these 2 files : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tinmard.github.io/_data/epifar/model_hybrid_electrode/tetrodeSeul.scad"&gt;tetrode_only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tinmard.github.io/_data/epifar/model_hybrid_electrode/microMacro.scad"&gt;micro-macro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More detailed &lt;a href="https://tinmard.github.io/_images/epifar/micro_macro_carac.pdf"&gt;images&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;File conversion&lt;/h2&gt;
&lt;p&gt;Report to this &lt;a href="https://tinmard.github.io/file-conversion.html"&gt;article&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Scripts for converting files and for synchronizing macro and micro data 
are &lt;a href="https://github.com/tinmarD/eegFileConversion"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Multiples format â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Hybrid electrode&lt;/h2&gt;
&lt;p&gt;New micro-macro electrode : &lt;/p&gt;
&lt;p&gt;{% img /_images/epifar/micro_macro.png 600 %}&lt;/p&gt;
&lt;p&gt;The image was generated with &lt;a href="http://www.openscad.org/"&gt;OpenScad&lt;/a&gt;, from these 2 files : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tinmard.github.io/_data/epifar/model_hybrid_electrode/tetrodeSeul.scad"&gt;tetrode_only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tinmard.github.io/_data/epifar/model_hybrid_electrode/microMacro.scad"&gt;micro-macro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More detailed &lt;a href="https://tinmard.github.io/_images/epifar/micro_macro_carac.pdf"&gt;images&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;File conversion&lt;/h2&gt;
&lt;p&gt;Report to this &lt;a href="https://tinmard.github.io/file-conversion.html"&gt;article&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Scripts for converting files and for synchronizing macro and micro data 
are &lt;a href="https://github.com/tinmarD/eegFileConversion"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Multiples format are used to record and analyze iEEG data : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Macro-electrodes are usually recorded in the &lt;em&gt;.edf&lt;/em&gt; format&lt;/li&gt;
&lt;li&gt;micro-electrodes recorded with the Blackrock microsystems amplifier are stored in &lt;em&gt;.ns5&lt;/em&gt; format with metadata and
 sometime triggers stored in a &lt;em&gt;.nev&lt;/em&gt; file&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Visualization&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://tinmard.github.io/micmac.html"&gt;micmac&lt;/a&gt; interface was specifically designed to visualize micro and Macro files. &lt;/p&gt;
&lt;h2&gt;Noise&lt;/h2&gt;
&lt;h3&gt;Electro-magnetic noise&lt;/h3&gt;
&lt;h4&gt;Hardware Solutions&lt;/h4&gt;
&lt;p&gt;{% img /_images/epifar/noise/mosaique.jpg 600 %}&lt;/p&gt;
&lt;p&gt;Hardware tools for reducing the noise : &lt;a href="noise_hardware_solutions.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Software Solutions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;LNC&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Noise level in micro-recordings&lt;/h3&gt;</content></entry><entry><title>Neurons</title><link href="https://tinmard.github.io/neurons/" rel="alternate"></link><published>2010-10-04T13:39:00+00:00</published><updated>2010-10-04T13:39:00+00:00</updated><author><name></name></author><id>tag:tinmard.github.io,2010-10-04:/neurons/</id><summary type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;Thanks to the new DIXI micro-macro electrode, single-unit activity can be recorded in epileptic patients during sEEG
exploration.  &lt;/p&gt;
&lt;p&gt;{% img /_images/epifar/micro_macro_details.png 800 %}&lt;/p&gt;
&lt;h2&gt;Analyses&lt;/h2&gt;
&lt;h3&gt;Spike-Sorting&lt;/h3&gt;
&lt;p&gt;Many spike-sorting tools exist (&lt;em&gt;WaveClus&lt;/em&gt;, &lt;em&gt;SpykingCircus&lt;/em&gt;, &lt;em&gt;tridesclous&lt;/em&gt;, &lt;em&gt;Spike2&lt;/em&gt;, ...). 
See &lt;a href="https://simonster.github.io/SpikeSortingSoftware/"&gt;here&lt;/a&gt; for more. 
We have chosen &lt;a href="https://spyking-circus.readthedocs.io/en/latest/"&gt;&lt;em&gt;SpykingCircus&lt;/em&gt;&lt;/a&gt;, it has the advantages of handling 
tetrode â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Intro&lt;/h2&gt;
&lt;p&gt;Thanks to the new DIXI micro-macro electrode, single-unit activity can be recorded in epileptic patients during sEEG
exploration.  &lt;/p&gt;
&lt;p&gt;{% img /_images/epifar/micro_macro_details.png 800 %}&lt;/p&gt;
&lt;h2&gt;Analyses&lt;/h2&gt;
&lt;h3&gt;Spike-Sorting&lt;/h3&gt;
&lt;p&gt;Many spike-sorting tools exist (&lt;em&gt;WaveClus&lt;/em&gt;, &lt;em&gt;SpykingCircus&lt;/em&gt;, &lt;em&gt;tridesclous&lt;/em&gt;, &lt;em&gt;Spike2&lt;/em&gt;, ...). 
See &lt;a href="https://simonster.github.io/SpikeSortingSoftware/"&gt;here&lt;/a&gt; for more. 
We have chosen &lt;a href="https://spyking-circus.readthedocs.io/en/latest/"&gt;&lt;em&gt;SpykingCircus&lt;/em&gt;&lt;/a&gt;, it has the advantages of handling 
tetrode configuration, to be designed in Python, and has been tested on several datasets, reaching very good results. &lt;/p&gt;
&lt;h3&gt;Analyses&lt;/h3&gt;
&lt;h4&gt;Neo&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://neo.readthedocs.io/en/0.6/"&gt;Neo&lt;/a&gt; is a Python package for working with electrophysiology data in Python. 
Neo offers a way to represent electrophysiologycal data in memory. Its IO (Input/Output) module allows to have read and write
a large number of electrophysiologycal file formats.&lt;/p&gt;
&lt;p&gt;{% img /_images/neurons/neo_base_schematic.png 600 %}&lt;/p&gt;
&lt;h4&gt;SpykingCircus Results to Neo&lt;/h4&gt;
&lt;p&gt;Details of the files generated by SpykingCircus : &lt;a href="https://spyking-circus.readthedocs.io/en/latest/advanced/files.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each unit has a preffered micro-contact, i.e. we can imagine that it is the contact from which the unit is closer.
 Indeed the same spike appears in the 4 contacts of the tetrode.
  It allows to have a better representation of the unit shape from &lt;em&gt;"different angles"&lt;/em&gt; and is thus helpful 
  for the spike-sorting : discriminating which unit has emitted the different spikes recorded on the tetrode (given the fact
  that a single tetrode can records spikes from different units).&lt;/p&gt;</content></entry><entry><title>SAB</title><link href="https://tinmard.github.io/sab/" rel="alternate"></link><published>2010-10-04T13:39:00+00:00</published><updated>2010-10-04T13:39:00+00:00</updated><author><name></name></author><id>tag:tinmard.github.io,2010-10-04:/sab/</id><summary type="html">&lt;p&gt;SAB index page&lt;/p&gt;</summary><content type="html">&lt;p&gt;SAB index page&lt;/p&gt;</content></entry><entry><title>SAB</title><link href="https://tinmard.github.io/sab.html" rel="alternate"></link><published>2010-10-04T13:39:00+00:00</published><updated>2010-10-04T13:39:00+00:00</updated><author><name></name></author><id>tag:tinmard.github.io,2010-10-04:/sab.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;The documentation is here : http://sab-main.readthedocs.io&lt;/li&gt;
&lt;li&gt;Github link : https://github.com/tinmarD/SAB_main&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The SAB (Speed and Accuracy Boosting) was first presented in the following paper : https://www.researchgate.net/publication/263213203_The_speed_of_visual_recognition_memory&lt;/p&gt;
&lt;p&gt;The SAB_main package allows you to do several analyses:
 * ERPs
 * Phase, ITPC (Inter-Trial Phase Coherence)
 * Feature â€¦&lt;/p&gt;</summary><content type="html">&lt;ul&gt;
&lt;li&gt;The documentation is here : http://sab-main.readthedocs.io&lt;/li&gt;
&lt;li&gt;Github link : https://github.com/tinmarD/SAB_main&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The SAB (Speed and Accuracy Boosting) was first presented in the following paper : https://www.researchgate.net/publication/263213203_The_speed_of_visual_recognition_memory&lt;/p&gt;
&lt;p&gt;The SAB_main package allows you to do several analyses:
 * ERPs
 * Phase, ITPC (Inter-Trial Phase Coherence)
 * Feature extraction
 * Correlations between feature and reaction times&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;SAB_main is using Python 3
The following packages are needed :
 * pywavelets
 * tqdm
 * seaborn
 * datetime
 * sklearn
 * scipy
 * numpy
 * matplotlib
 * _pickle&lt;/p&gt;
&lt;h2&gt;Screenshots&lt;/h2&gt;
&lt;h3&gt;ERP analyses&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="_images/sab/erp_examples.png"&gt;&lt;/p&gt;
&lt;h3&gt;Phase analyses&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="_images/sab/itpc_example.png"&gt;&lt;/p&gt;
&lt;h3&gt;Extract feature and evaluate their importance for predicting the behavioural response&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="_images/sab/feature_importance_example.png"&gt;&lt;/p&gt;
&lt;h3&gt;Evaluate correlation between features and reaction times&lt;/h3&gt;
&lt;p&gt;&lt;img alt="" src="_images/sab/feature_corr_example.png"&gt;&lt;/p&gt;</content><category term="SAB"></category><category term="iEEG"></category></entry><entry><title>Stimic</title><link href="https://tinmard.github.io/stimic/" rel="alternate"></link><published>2010-10-04T13:39:00+00:00</published><updated>2010-10-04T13:39:00+00:00</updated><author><name></name></author><id>tag:tinmard.github.io,2010-10-04:/stimic/</id><summary type="html">&lt;p&gt;Stimic index page &lt;/p&gt;
&lt;h1&gt;Stimulation Event List&lt;/h1&gt;
&lt;p&gt;The first step fot the Stimic project is to list all the stimulations, their localization, the electrical parameters,
 and associate each stimulation with its potential effect on the iEEG &lt;/p&gt;
&lt;p&gt;To gain speed, a semi-automatic detection pipeline was developped. The different steps are :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clean the â€¦&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Stimic index page &lt;/p&gt;
&lt;h1&gt;Stimulation Event List&lt;/h1&gt;
&lt;p&gt;The first step fot the Stimic project is to list all the stimulations, their localization, the electrical parameters,
 and associate each stimulation with its potential effect on the iEEG &lt;/p&gt;
&lt;p&gt;To gain speed, a semi-automatic detection pipeline was developped. The different steps are :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clean the different EDF files, keep only good EEG channels&lt;/li&gt;
&lt;li&gt;Run the stimulation detector&lt;/li&gt;
&lt;li&gt;Visual check of the event detected using &lt;a href="https://tinmard.github.io/micmac.html"&gt;micmac&lt;/a&gt; and export the corrected event list. &lt;/li&gt;
&lt;li&gt;Re-organized the csv file (in Excel) and add a bipolar channel column&lt;/li&gt;
&lt;li&gt;Concatenate these event files for all edf files&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All the procedure is described &lt;a href="https://tinmard.github.io/stimic-stimulation-listing.html"&gt;here&lt;/a&gt;)&lt;/p&gt;</content></entry></feed>