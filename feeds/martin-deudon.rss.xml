<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Le Temple - Martin Deudon</title><link>https://tinmard.github.io/</link><description></description><lastBuildDate>Thu, 17 Jan 2019 14:48:00 +0100</lastBuildDate><item><title>Cartography with the NetworkX library</title><link>https://tinmard.github.io/cartography-with-the-networkx-library.html</link><description>&lt;p&gt;&lt;a href="https://networkx.github.io/"&gt;Networkx&lt;/a&gt; is a Python package for the creation, manipulation, and study of the
 structure, dynamics, and functions of complex networks.&lt;/p&gt;
&lt;p&gt;Tutorial on Datacamp : &lt;a href="https://www.datacamp.com/courses/network-analysis-in-python-part-1"&gt;network-analysis-in-python-part-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following image was generated with networkx. It shows a map of the different scripts in both Python and Matlab: 
The projects sharing keywords between one …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 17 Jan 2019 14:48:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2019-01-17:/cartography-with-the-networkx-library.html</guid><category>networkx</category><category>python</category></item><item><title>Spike Sorting Animation</title><link>https://tinmard.github.io/spike-sorting-animation.html</link><description>&lt;p&gt;Github link : &lt;a href="https://github.com/tinmarD/SpikeSortingAnimation"&gt;https://github.com/tinmarD/SpikeSortingAnimation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These scripts illustrate the spike-sorting process using Python and &lt;a href="https://www.pygame.org/news"&gt;pygame&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;spikesorting_game_1.py&lt;/code&gt; shows the raw signal on 1 tetrode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spikesorting_game_1_2.py&lt;/code&gt; shows both the raw and filtered signal (~300-3000Hz)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spikesorting_game_2.py&lt;/code&gt; shows the raw signal on top and the action potential after spike …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 17 Jan 2019 14:00:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2019-01-17:/spike-sorting-animation.html</guid><category>neurons</category><category>spike-sorting</category><category>animation</category><category>pygame</category></item><item><title>Git - Update your code</title><link>https://tinmard.github.io/git-update-your-code.html</link><description>&lt;p&gt;&lt;img alt="gitlogo" src="/images/misc/gitlogo.png"&gt;&lt;/p&gt;
&lt;h3&gt;How to use git to update your code&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; is a free and open source distributed version control system. It allows
you to get some code from repositories like &lt;a href="https://github.com"&gt;github&lt;/a&gt; and to easily update your
 code to the latest version.&lt;/p&gt;
&lt;p&gt;The first step is to install git : &lt;a href="https://git-scm.com/"&gt;https://git-scm.com …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Wed, 16 Jan 2019 14:11:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2019-01-16:/git-update-your-code.html</guid><category>Git</category></item><item><title>Pelican - How to add an article</title><link>https://tinmard.github.io/pelican-how-to-add-an-article.html</link><description>&lt;p&gt;&lt;img alt="pelicanlogo" src="/images/python/pelican/pelicanlogo.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Pelican is a static site generator, written in Python. This site is based on Pelican.&lt;/p&gt;
&lt;p&gt;Documentation : &lt;a href="http://docs.getpelican.com/en/stable/"&gt;http://docs.getpelican.com/en/stable/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are a great number of tutorial on the internet explaining how to start a Pelican site. In this article we will 
simply see how to add an …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Tue, 15 Jan 2019 11:54:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2019-01-15:/pelican-how-to-add-an-article.html</guid><category>Pelican</category><category>Doc</category></item><item><title>Pelican - How to update the Search content</title><link>https://tinmard.github.io/pelican-how-to-update-the-search-content.html</link><description>&lt;p&gt;The Search tool for this site is based on &lt;a href="http://www.tipue.com/search/help/"&gt;Tipue Search&lt;/a&gt;. This tool requires the 
content of the site to be indexed. &lt;/p&gt;
&lt;p&gt;One way to do this is explained &lt;a href="http://www.tipue.com/search/help/?d=2"&gt;here&lt;/a&gt; but it does not seems to work when the 
 site is publish on github pages as it is the case …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Tue, 15 Jan 2019 11:54:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2019-01-15:/pelican-how-to-update-the-search-content.html</guid><category>Pelican</category><category>Doc</category></item><item><title>Cython - How to compile</title><link>https://tinmard.github.io/cython-how-to-compile.html</link><description>&lt;p&gt;&lt;img src="/images/python/cython/cythonlogo.jpg" width="200"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cython.org/"&gt;Cython&lt;/a&gt; is a tool that allows you to compile your code to C, resulting in a huge speed increase. All is needed is slight 
modification of the python code.&lt;/p&gt;
&lt;p&gt;The Cython documentation : &lt;a href="http://docs.cython.org/en/latest/"&gt;http://docs.cython.org/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you only need to compile some Cython file (&lt;strong&gt;.pyx&lt;/strong&gt; extension), here …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 14 Jan 2019 18:14:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2019-01-14:/cython-how-to-compile.html</guid><category>Cython</category><category>Tips</category></item><item><title>Jupyter Notebook and Jupyter Lab</title><link>https://tinmard.github.io/jupyter-notebook-and-jupyter-lab.html</link><description>&lt;p&gt;Jupyter notebooks and Jupyter Lab presentation&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 10 Jan 2019 11:48:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2019-01-10:/jupyter-notebook-and-jupyter-lab.html</guid><category>Python</category><category>Jupyter</category><category>Notebook</category></item><item><title>Stimic - Analysis - Artefact evolution across contacts</title><link>https://tinmard.github.io/stimic-analysis-artefact-evolution-across-contacts.html</link><description>&lt;p&gt;Download the notebook : &lt;a href="https://tinmard.github.io/notebooks/stimic_artefact_distance.py"&gt;stimic_artefact_distance.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Shape-evolution-of-the-stimulation-artefact-along-the-electrode"&gt;Shape evolution of the stimulation artefact along the electrode&lt;a class="anchor-link" href="#Shape-evolution-of-the-stimulation-artefact-along-the-electrode"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this notebook, we analyse how the shape of the artefact changes when the distrance from the recording site to the stimulation site increases.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;matplotlib&lt;/span&gt; inline
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 08 Nov 2018 13:42:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-11-08:/stimic-analysis-artefact-evolution-across-contacts.html</guid><category>Stimic</category><category>notebook</category></item><item><title>Stimic - Analysis - Artifact Carac</title><link>https://tinmard.github.io/stimic-analysis-artifact-carac.html</link><description>&lt;p&gt;Download the notebook : &lt;a href="https://tinmard.github.io/notebooks/stimic_artefact_carac.py"&gt;stimic_artefact_carac.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Caracterization-of-the-stimulation-artefact"&gt;Caracterization of the stimulation artefact&lt;a class="anchor-link" href="#Caracterization-of-the-stimulation-artefact"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;matplotlib&lt;/span&gt; inline
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mne&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;../stimic_main/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;utils_stimic&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;utils_eeg_cleaning&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;stim_analysis_fun&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_context …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 08 Nov 2018 13:42:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-11-08:/stimic-analysis-artifact-carac.html</guid><category>Stimic</category><category>Artifact</category><category>notebook</category></item><item><title>Stimic - Analysis - Stim count</title><link>https://tinmard.github.io/stimic-analysis-stim-count.html</link><description>&lt;p&gt;Download the notebook : &lt;a href="https://tinmard.github.io/notebooks/stimic_stim_count.py"&gt;stimic_stim_count.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Count-Stim"&gt;Count Stim&lt;a class="anchor-link" href="#Count-Stim"&gt;&amp;#182;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This notebook show how to count the number of stimulations in function of the different stimulation paremeters from the Stimulation Event File&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;matplotlib&lt;/span&gt; inline
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 08 Nov 2018 13:42:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-11-08:/stimic-analysis-stim-count.html</guid><category>Stimic</category><category>notebook</category></item><item><title>Stimic - Stimulation Detection Algorithm</title><link>https://tinmard.github.io/stimic-stimulation-detection-algorithm.html</link><description>&lt;h2 id="detection-algorithm-details"&gt;Detection Algorithm Details&lt;/h2&gt;
&lt;h3 id="1-hz-stimulation"&gt;1 Hz Stimulation&lt;/h3&gt;
&lt;p&gt;&lt;img src="/images/stimic/stim_list/1Hz_artefact_macro.png" width="600"/&gt;&lt;/p&gt;
&lt;p&gt;For 1Hz stimulation we count the number of peaks if the threshold signal in the window [-0.1s, 10.1s] around each time of threshold crossing. If the number of peaks if equal to 10 more or less, the event is considered a 1Hz …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 08 Nov 2018 13:42:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-11-08:/stimic-stimulation-detection-algorithm.html</guid><category>Stimic</category><category>detector</category></item><item><title>Stimic - Stimulation Event List Creation</title><link>https://tinmard.github.io/stimic-stimulation-event-list-creation.html</link><description>&lt;p&gt;This article describes the procedure used for listing all the stimulations events through a semi-automated pipeline.&lt;/p&gt;
&lt;h2 id="artifact-detection-in-macro-electrodes"&gt;Artifact Detection in macro-electrodes&lt;/h2&gt;
&lt;h3 id="description"&gt;Description&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Goal&lt;/strong&gt; :  Detect (semi)-automatically stimulation artifacts on the macro-signals. Detection output must give the onset time of the stim, the channel(s) of stimulations and the frequency of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 08 Nov 2018 13:42:00 +0100</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-11-08:/stimic-stimulation-event-list-creation.html</guid><category>Stimic</category></item><item><title>Python for Neuroscience</title><link>https://tinmard.github.io/python-for-neuroscience.html</link><description>&lt;p&gt;Presents some Python packages for neuroscience&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Wed, 24 Oct 2018 17:29:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-10-24:/python-for-neuroscience.html</guid><category>Python</category></item><item><title>How to create documentation with Sphinx</title><link>https://tinmard.github.io/how-to-create-documentation-with-sphinx.html</link><description>&lt;p&gt;Sphinx explained. Add comments to your Python code. Use of Sphinx-quickstart and sphinx-autodoc. Change the theme&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Tue, 23 Oct 2018 14:15:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-10-23:/how-to-create-documentation-with-sphinx.html</guid><category>Python</category><category>Doc</category><category>Sphinx</category></item><item><title>File conversion</title><link>https://tinmard.github.io/file-conversion.html</link><description>&lt;p&gt;How to use the file conversion scripts. Change the format. Create a new montage. Deal with Epifar Files&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 22 Oct 2018 17:33:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-10-22:/file-conversion.html</guid><category>Epifar</category><category>iEEG</category><category>EDF</category></item><item><title>Hardware tools for reducing noise in micro-recordings</title><link>https://tinmard.github.io/epifar/</link><description>&lt;p&gt;A complete list of all hardware used for reducing noise in micro-electrode recordings is
 avalaible &lt;a href="https://tinmard.github.io/data/epifar/noise/hardware/hardware_list.xlsx"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;h3 id="spectrum-analyzer-spectran-nf-1010e"&gt;&lt;strong&gt;Spectrum Analyzer SPECTRAN-NF 1010E&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The Spectran NF-1010E from Aaronia is a spectrum analyzer. It can measures 
 both electric and magnetic fields in a frequency range of 10Hz to 10kHz. It is very useful for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 22 Oct 2018 17:33:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-10-22:/epifar/</guid><category>Epifar</category><category>Hardware</category><category>Noise</category></item><item><title>Home</title><link>https://tinmard.github.io/</link><description>&lt;p&gt;Bienvenue&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://tinmard.github.io/sab/"&gt;&lt;img src="/images/home/SAB.png" width="250"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://tinmard.github.io/epifar/"&gt;&lt;img src="/images/home/Epifar.png" width="250"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://tinmard.github.io/cochlea"&gt;&lt;img src="/images/home/Cochlea.png" width="250"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://tinmard.github.io/micmac.html"&gt;&lt;img src="/images/home/micmac.png" width="250"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://tinmard.github.io/stimic/"&gt;&lt;img src="/images/home/Stimic.png" width="250"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://tinmard.github.io/neurons/"&gt;&lt;img src="/images/home/neurons.png" width="250"/&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 04 Oct 2018 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-10-04:/</guid></item><item><title>Home-old</title><link>https://tinmard.github.io/home-old.html</link><description>&lt;p&gt;Bienvenue&lt;/p&gt;
&lt;p&gt;Project Map &lt;/p&gt;
&lt;p&gt;&lt;img src="images/cartographie.png" width="1000"/&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Thu, 04 Oct 2018 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2018-10-04:/home-old.html</guid></item><item><title>Cochlea</title><link>https://tinmard.github.io/cochlea</link><description>&lt;p&gt;The simplecochlea package is a basic cochlea model, designed during the &lt;a href="http://m4.ups-tlse.fr/"&gt;M4 project&lt;/a&gt;, 
for the conversion of sound into spikes. &lt;/p&gt;
&lt;p&gt;&lt;img src="/images/cochlea/cochlea_schema.png" width="800"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The code is availaible &lt;a href="https://github.com/tinmarD/simplecochlea"&gt;here&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;The doc is &lt;a href="https://simplecochlea.readthedocs.io/en/latest/"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/cochlea</guid><category>M4</category><category>Cochlea</category><category>Model</category></item><item><title>DanaSoft</title><link>https://tinmard.github.io/danasoft.html</link><description>&lt;p&gt;DanaSoft is a python interface based on PyQt4. &lt;/p&gt;
&lt;p&gt;Github &lt;a href="https://github.com/tinmarD/danasoft"&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="danasoft_example" src="images/danasoft/fastmapping_train_fam.png"/&gt;&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;If you are using Anaconda create a new environment with python's version 2.7 (in a terminal) :&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;shell
   conda create -n danasoft_env python=2.7
   activate danasoft_env&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Manual install PyQt4 on this environment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install numpy : conda install numpy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download …&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/danasoft.html</guid><category>M4</category><category>DanaSoft</category><category>GUI</category><category>Python</category></item><item><title>Debug EDF Files</title><link>https://tinmard.github.io/debug-edf-files.html</link><description>&lt;h1 id="missing-header-information"&gt;Missing header information&lt;/h1&gt;
&lt;p&gt;L'en-t&amp;ecirc;te (header) des fichiers .edf contient des m&amp;eacute;tadonn&amp;eacute;es sur le patient, l'h&amp;ocirc;pital... Si certaines de ces donn&amp;eacute;es sont absentes,
cela peut poser probl&amp;egrave;me lors de l'ouverture du fichier selon le lecteur utilis&amp;eacute; (cela ne semble pas avoir d'impact sur EEGLAB mais pose probl&amp;egrave;me sur Anywave).&lt;/p&gt;
&lt;p&gt;Il existe …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/debug-edf-files.html</guid><category>Epifar</category><category>iEEG</category><category>debug</category><category>EDF</category></item><item><title>Epifar</title><link>https://tinmard.github.io/epifar/</link><description>&lt;h2 id="hybrid-electrode"&gt;Hybrid electrode&lt;/h2&gt;
&lt;p&gt;New micro-macro electrode : &lt;/p&gt;
&lt;p&gt;&lt;img src="/images/epifar/micro_macro.png" width="600"/&gt;&lt;/p&gt;
&lt;p&gt;The image was generated with &lt;a href="http://www.openscad.org/"&gt;OpenScad&lt;/a&gt;, from these 2 files : &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tinmard.github.io/data/epifar/model_hybrid_electrode/tetrodeSeul.scad"&gt;tetrode_only&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tinmard.github.io/data/epifar/model_hybrid_electrode/microMacro.scad"&gt;micro-macro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More detailed &lt;a href="https://tinmard.github.io/images/epifar/micro_macro_carac.pdf"&gt;images&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="file-conversion"&gt;File conversion&lt;/h2&gt;
&lt;p&gt;Report to this &lt;a href="https://tinmard.github.io/file-conversion.html"&gt;article&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Scripts for converting files and for synchronizing macro and micro data 
are &lt;a href="https://github.com/tinmarD/eegFileConversion"&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Multiples format are used to record and analyze …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/epifar/</guid><category>Epifar</category><category>iEEG</category><category>hybrid electrode</category></item><item><title>Matplotlib tips</title><link>https://tinmard.github.io/matplotlib-tips.html</link><description>&lt;p&gt;Tips about matplotlib library. Legend, backend, ...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/matplotlib-tips.html</guid><category>Python</category><category>Tips</category><category>Programming</category></item><item><title>micMac</title><link>https://tinmard.github.io/micmac.html</link><description>&lt;ul&gt;
&lt;li&gt;Github link : &lt;a href="https://github.com/tinmarD/micmac"&gt;micmac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation : &lt;a href="https://micmac.readthedocs.io/en/latest/"&gt;https://micmac.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;micMac&lt;/strong&gt; was designed to visualize and analyse intracerebral recordings.
&lt;strong&gt;micMac&lt;/strong&gt; handles micro- and Macro- recordings and is helpful for visualizing signals recorded by hybrids electrodes.&lt;/p&gt;
&lt;h2 id="installation"&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;a href="https://sccn.ucsd.edu/eeglab/download.php"&gt;EEGLAB&lt;/a&gt; and add it to the MATLAB path.&lt;/li&gt;
&lt;li&gt;Install the Biosig toolbox from …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/micmac.html</guid><category>micMac</category><category>Epifar</category><category>GUI</category><category>iEEG</category><category>Matlab</category></item><item><title>Neurons</title><link>https://tinmard.github.io/neurons/</link><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;Thanks to the new DIXI micro-macro electrode, single-unit activity can be recorded in epileptic patients during sEEG
exploration.  &lt;/p&gt;
&lt;p&gt;&lt;img src="/images/epifar/micro_macro_details.png" width="800"/&gt;&lt;/p&gt;
&lt;h2 id="analyses"&gt;Analyses&lt;/h2&gt;
&lt;h3 id="spike-sorting"&gt;Spike-Sorting&lt;/h3&gt;
&lt;p&gt;Many spike-sorting tools exist (&lt;em&gt;WaveClus&lt;/em&gt;, &lt;em&gt;SpykingCircus&lt;/em&gt;, &lt;em&gt;tridesclous&lt;/em&gt;, &lt;em&gt;Spike2&lt;/em&gt;, ...). 
See &lt;a href="https://simonster.github.io/SpikeSortingSoftware/"&gt;here&lt;/a&gt; for more. 
We have chosen &lt;a href="https://spyking-circus.readthedocs.io/en/latest/"&gt;&lt;em&gt;SpykingCircus&lt;/em&gt;&lt;/a&gt;, it has the advantages of handling 
tetrode configuration, to be designed in Python …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/neurons/</guid><category>neurons</category><category>spike-sorting</category><category>neo</category><category>pySpikeAnalysis</category></item><item><title>Numpy tips</title><link>https://tinmard.github.io/numpy-tips.html</link><description>&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)))[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find points of x crossing the threshold T :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;))[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find points of x crossing threshold  ascending :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remove points that are close, i.e. given a &lt;strong&gt;sorted&lt;/strong&gt; array …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/numpy-tips.html</guid><category>Python</category><category>Tips</category><category>Programming</category></item><item><title>Python tips</title><link>https://tinmard.github.io/python-tips.html</link><description>&lt;h2 id="datetime"&gt;Datetime&lt;/h2&gt;
&lt;p&gt;Get the current date/time and format it (e.g. to create a filename) :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;%b%Y-%Hh%M'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'10Oct2018-18h01'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://docs.python.org/fr/3/library/datetime.html#strftime-strptime-behavior"&gt;Comportement de &lt;code&gt;strftime()&lt;/code&gt; et &lt;code&gt;strptime()&lt;/code&gt; &lt;/a&gt; for the availables directives&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/python-tips.html</guid><category>Python</category><category>Tips</category><category>Programming</category></item><item><title>SAB</title><link>https://tinmard.github.io/sab/</link><description>&lt;p&gt;The pySAB package is a python module designed to analyze the data from the SAB experiment. It contains script for ERP 
analysis, feature extraction, decoding, correlation analysis, ...&lt;/p&gt;
&lt;p&gt;&lt;img alt="erp" src="/images/sab/erp_examples.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github link : &lt;a href="https://github.com/tinmarD/pySAB"&gt;https://github.com/tinmarD/SAB_main&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation : &lt;a href="https://pysab.readthedocs.io/en/latest/"&gt;https://pysab.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/sab/</guid><category>iEEG</category><category>SAB</category><category>pySAB</category><category>Memory</category></item><item><title>Software List</title><link>https://tinmard.github.io/software-list.html</link><description>&lt;h2&gt;micMac&lt;/h2&gt;
&lt;p&gt;micMac is a matlab GUI for iEEG visualization and analysis.
More info &lt;a href="https://tinmard.github.io/micmac.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Danasoft&lt;/h2&gt;
&lt;p&gt;DanaSoft is an interface for running a learning experience in children.
The documentation is &lt;a href="https://tinmard.github.io/danasoft.html"&gt;here&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/software-list.html</guid><category>Software</category></item><item><title>Stimic</title><link>https://tinmard.github.io/stimic/</link><description>&lt;h1 id="stimulation-event-list-and-epoch-creation"&gt;Stimulation Event List and Epoch creation&lt;/h1&gt;
&lt;p&gt;The first step fot the Stimic project is to list all the stimulations, their localization, the electrical parameters,
 and associate each stimulation with its potential effect on the iEEG &lt;/p&gt;
&lt;p&gt;To gain speed, a semi-automatic detection pipeline was developped. The different steps are :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clean the …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Deudon</dc:creator><pubDate>Mon, 04 Oct 2010 13:39:00 +0200</pubDate><guid isPermaLink="false">tag:tinmard.github.io,2010-10-04:/stimic/</guid><category>Stimic</category><category>iEEG</category></item></channel></rss>